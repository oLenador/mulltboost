// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Create as $Create } from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as entities$0 from "../entities/models.js";

export class BoosterDto {
    "ID": string;
    "Name": string;
    "Description": string;
    "Category": entities$0.BoosterCategory;
    "Level": entities$0.BoosterLevel;
    "Platform": entities$0.Platform[];
    "Dependencies": string[];
    "Conflicts": string[];
    "Reversible": boolean;
    "RiskLevel": entities$0.RiskLevel;
    "Version": string;
    "Tags": string[];

    /** Creates a new BoosterDto instance. */
    constructor($$source: Partial<BoosterDto> = {}) {
        if (!("ID" in $$source)) {
            this["ID"] = "";
        }
        if (!("Name" in $$source)) {
            this["Name"] = "";
        }
        if (!("Description" in $$source)) {
            this["Description"] = "";
        }
        if (!("Category" in $$source)) {
            this["Category"] = entities$0.BoosterCategory.$zero;
        }
        if (!("Level" in $$source)) {
            this["Level"] = entities$0.BoosterLevel.$zero;
        }
        if (!("Platform" in $$source)) {
            this["Platform"] = [];
        }
        if (!("Dependencies" in $$source)) {
            this["Dependencies"] = [];
        }
        if (!("Conflicts" in $$source)) {
            this["Conflicts"] = [];
        }
        if (!("Reversible" in $$source)) {
            this["Reversible"] = false;
        }
        if (!("RiskLevel" in $$source)) {
            this["RiskLevel"] = entities$0.RiskLevel.$zero;
        }
        if (!("Version" in $$source)) {
            this["Version"] = "";
        }
        if (!("Tags" in $$source)) {
            this["Tags"] = [];
        }

        Object.assign(this, $$source);
    }

    /**
     * Creates a new BoosterDto instance from a string or object.
     */
    static createFrom($$source: any = {}): BoosterDto {
        const $$createField5_0 = $$createType0;
        const $$createField6_0 = $$createType1;
        const $$createField7_0 = $$createType1;
        const $$createField11_0 = $$createType1;
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        if ("Platform" in $$parsedSource) {
            $$parsedSource["Platform"] = $$createField5_0($$parsedSource["Platform"]);
        }
        if ("Dependencies" in $$parsedSource) {
            $$parsedSource["Dependencies"] = $$createField6_0($$parsedSource["Dependencies"]);
        }
        if ("Conflicts" in $$parsedSource) {
            $$parsedSource["Conflicts"] = $$createField7_0($$parsedSource["Conflicts"]);
        }
        if ("Tags" in $$parsedSource) {
            $$parsedSource["Tags"] = $$createField11_0($$parsedSource["Tags"]);
        }
        return new BoosterDto($$parsedSource as Partial<BoosterDto>);
    }
}

// Private type creation functions
const $$createType0 = $Create.Array($Create.Any);
const $$createType1 = $Create.Array($Create.Any);
